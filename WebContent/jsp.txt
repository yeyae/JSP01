JSP : Java Server Page

웹의 동작에대해서 알아보기
서버, 클라이언트
서버 : 클라이언트가 요청한 서비스를 제공해주는 친구

웹 서버 : 클라이언트가 요청한 웹 문서를 찾아서 전달하는 일
(요청한 파일이 없거나 요청에 문제가 발생하면 코드로 응답을 대신)
(404 : not fount => 웹 문서를 찾을수 없다. )
(500 : server error => 서버에서 문제가 발생했다. )

웹 어플리케이션 : 사용자의 요청을 처리하기 위한 로직을 실행하는 프로그램
WAS (Web Application Server) : 웹 서버에서 요청을 처리하는 로직을 구조적으로 분리

JSP / Servlet
Servlet : 자바로 웹 프로그래밍을 하기위한 규약 또는 그 규약을 통해 만든 (작성한) 프로그램
HttpServlet : Servlet 규약에 맞춰서 작성된 자바의 클래스, 요청을 받고 응답할 수 있다.
우리는 HttpServlet을 상속받아서 작성을 하게 될겁니다. => tomcat이 제공

JSP 이전에 Servlet이 먼저 존재했었다.
자바 코드안에 html코드를 포함하는 형태.
pw.write("<h1>hello!</h1>");

이런식으로 하면 화면을 만들어내는데 불편함.
그래서 JSP가 등장, html 코드안에 java 코드를 삽입하는 방법으로 변경
JSP 안에는 Servlet ( JSP는 사실 Servlet 기반 )
우리가 jsp 페이지를 작성하고 실행하면 => servlet으로 변환되어 실행

JSP 페이지의 구성요소
1. 디렉티브
종류 : page, taglib, include
page : jsp 페이지에 대한 정보를 지정 (문서 타입 등)
taglib : jsp 페이지에서 사용할 태그 라이브러리 지정한다.
include : jsp 페이지의 특정 영역에 다른 문서를 포함시킨다.
<%@ 디렉티브이름 속성1="값1" 속성2="값2" ... %>

2. 스크립트
jsp 페이지 내에서 java 코드를 사용하도록 하는 부분
종류 : 표현식, 스크립트릿, 선언부
표현식 : <%= %> 자바코드에서 사용한 변수, 메서드 실행결과, 연산결과 등을
화면에 출력하기 위해서 사용
스크립트릿 : <% %> 명령문의 실행부분, 연산, 함수호출 등
선언부 : <%! %> 자바코드의 선언문(변수, 메소드)을 작성할때 사용

3. 기본 객체 (내장 객체)
jsp로 웹 어플리케이션 프로그래밍을 하는데 필요한 기능을 제공하는 객체
request, response, session, page....
요청 , 응답, 세션, 페이지

4. 표현언어 
변수값을 화면에 쉽게 표현할수 있도록 만들어주는 언어

5. 액션태그
JSP에서 자주 사용되는 복잡한 기능들을 사용하기 쉽게 미리 만들어놓은 태그
JSTL 라이브러리 (JavaServer Pages Standard Tag Library)
복잡한 if-else 처리, 반복문 처리를 도와준다.

기본 객체
request : javax.servlet.http.HttpServletRequest 클라이언트의 요청정보
response : javax.servlet.http.HttpServletResponse 응답 정보 저장
pageContext : javax.servlet.jsp.PageContext JSP 페이지에 대한 정보를 저장
session : javax.servlet.http.HttpSession Http 세션 정보를 저장
out : javax.servlet.jsp.JspWriter JSP 페이지가 생성하는 결과를 출력할때 사용하는 출력 스트림
application : 웹 어플리케이션에 대한 정보를 저장
config : JSP 페이지에 대한 설정 정보를 저장
page : JSP 페이지를 구현한 자바 클래스 인스턴스
exception : 예외 정보 저장 객체, 에러페이지 에서만 사용가능








